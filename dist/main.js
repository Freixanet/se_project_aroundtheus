!function(){"use strict";class e{constructor(e,t,n){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeIcon(){this._cardElement.querySelector(".cards__like-button").classList.toggle("cards__like-button_active")}getView(){const e=this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0),t=e.querySelector(".cards__image");return t.src=this._link,t.alt=this._name,e.querySelector(".cards__title").textContent=this._name,this._setEventListeners(),e}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const n=document.querySelector("#profile__edit-button"),r=document.querySelector("#profile__edit-modal"),o=r.querySelector(".modal__close"),s=document.querySelector(".profile__title"),i=document.querySelector(".profile__description"),a=document.querySelector("#profile-title-input"),l=document.querySelector("#profile-description-input"),c=r.querySelector(".modal__form"),u=document.querySelector("#card__add-modal"),d=u.querySelector(".modal__close"),_=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list")),m=document.querySelector("#profile__add-button"),p=u.querySelector("#add__card-form"),h=p.querySelector(".modal__input_type_title"),v=p.querySelector(".modal__input_type_url"),y=document.querySelector("#preview__image-modal"),S=y.querySelector(".modal__close"),E=y.querySelector(".modal__preview-image"),f=y.querySelector(".modal__preview-text");function k(e){e.classList.add("modal_opened"),document.addEventListener("keydown",q)}function L(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",q)}function q(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&L(e)}}const g=[r,u,y];function w(t){return new e(t,"#card-template",((e,t)=>{E.src=t,E.alt=e,f.textContent=e,k(y)})).getView()}n.addEventListener("click",(()=>{a.value=s.textContent,l.value=i.textContent,k(r)})),o.addEventListener("click",(()=>{L(r)})),d.addEventListener("click",(()=>{L(u)})),S.addEventListener("click",(()=>{L(y)})),m.addEventListener("click",(()=>{k(u)})),c.addEventListener("submit",(function(e){e.preventDefault(),s.textContent=a.value,i.textContent=l.value,L(r)})),p.addEventListener("submit",(function(e){e.preventDefault(),function(e){const t=w(e);_.prepend(t)}({name:h.value,link:v.value}),L(u),p.reset(),B.toggleButtonState()})),[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}].forEach((e=>{const t=w(e);_.prepend(t)}));const b={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},C=new t(b,c),B=new t(b,p);B.enableValidation(),C.enableValidation(),g.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.matches(".modal")&&L(e)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,